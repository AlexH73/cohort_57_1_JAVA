package Lessons.Lesson_33.code;

import java.util.Stack;
import java.util.Collections;

/**
 * –°—Ç–µ–∫ (Stack) ‚Äî —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, —Ä–∞–±–æ—Ç–∞—é—â–∞—è –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É LIFO (Last In, First Out).
 * –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –±—É–¥–µ—Ç –∏–∑–≤–ª–µ—á—ë–Ω –ø–µ—Ä–≤—ã–º.
 *
 * üîπ –û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:
 * - `push(element)`: –î–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –≤ —Å—Ç–µ–∫.
 * - `pop()`: –£–¥–∞–ª—è–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–µ—Ä—Ö–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç (–≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ —Å—Ç–µ–∫ –ø—É—Å—Ç).
 * - `peek()`: –ü–æ–ª—É—á–∞–µ—Ç –≤–µ—Ä—Ö–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è.
 * - `search(element)`: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–∑–∏—Ü–∏—é —ç–ª–µ–º–µ–Ω—Ç–∞ (–æ—Ç 1), –ª–∏–±–æ -1, –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ—Ç.
 * - `contains(element)`: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤ —Å—Ç–µ–∫–µ.
 * - `size()`: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–∑–º–µ—Ä —Å—Ç–µ–∫–∞.
 * - `clear()`: –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ—Ç —Å—Ç–µ–∫.
 * - `isEmpty()`: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—É—Å—Ç –ª–∏ —Å—Ç–µ–∫.
 * - `remove(element)`: –£–¥–∞–ª—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å—Ç–µ–∫–∞.
 * - `reverse()`: –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –ø–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å—Ç–µ–∫–µ.
 */
public class StackOperationsDemo {
    public static void main(String[] args) {
        // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–µ–∫–∞
        Stack<String> stack = new Stack<>();

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (push)
        stack.push("–≠–ª–µ–º–µ–Ω—Ç 1");
        stack.push("–≠–ª–µ–º–µ–Ω—Ç 2");
        stack.push("–≠–ª–µ–º–µ–Ω—Ç 3");
        stack.push("–≠–ª–µ–º–µ–Ω—Ç 4");

        System.out.println("–ò—Å—Ö–æ–¥–Ω—ã–π —Å—Ç–µ–∫: " + stack);

        // –£–¥–∞–ª–µ–Ω–∏–µ –≤–µ—Ä—Ö–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ (pop)
        String removedElement = stack.pop();
        System.out.println("–£–¥–∞–ª—ë–Ω –≤–µ—Ä—Ö–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç: " + removedElement);
        System.out.println("–°—Ç–µ–∫ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: " + stack);

        // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Ä—Ö–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è (peek)
        System.out.println("–í–µ—Ä—Ö–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è: " + stack.peek());

        // –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å—Ç–µ–∫–µ
        int position = stack.search("–≠–ª–µ–º–µ–Ω—Ç 2");
        System.out.println("–ü–æ–∑–∏—Ü–∏—è '–≠–ª–µ–º–µ–Ω—Ç 2' –≤ —Å—Ç–µ–∫–µ: " + (position == -1 ? "–ù–µ –Ω–∞–π–¥–µ–Ω" : position));

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
        System.out.println("–°—Ç–µ–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç '–≠–ª–µ–º–µ–Ω—Ç 3'? " + stack.contains("–≠–ª–µ–º–µ–Ω—Ç 3"));

        // –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–µ–∫—É
        System.out.print("–ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–µ–∫—É: ");
        for (String item : stack) {
            System.out.print(item + " ");
        }
        System.out.println();

        // –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        stack.remove("–≠–ª–µ–º–µ–Ω—Ç 2");
        System.out.println("–°—Ç–µ–∫ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è '–≠–ª–µ–º–µ–Ω—Ç 2': " + stack);

        // –†–µ–≤–µ—Ä—Å–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–µ–∫–∞
        Collections.reverse(stack);
        System.out.println("–°—Ç–µ–∫ –ø–æ—Å–ª–µ —Ä–µ–≤–µ—Ä—Å–∏—Ä–æ–≤–∞–Ω–∏—è: " + stack);

        // –†–∞–∑–º–µ—Ä —Å—Ç–µ–∫–∞
        System.out.println("–†–∞–∑–º–µ—Ä —Å—Ç–µ–∫–∞: " + stack.size());

        // –û—á–∏—Å—Ç–∫–∞ —Å—Ç–µ–∫–∞
        stack.clear();
        System.out.println("–°—Ç–µ–∫ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏: " + stack);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞, –ø—É—Å—Ç –ª–∏ —Å—Ç–µ–∫
        System.out.println("–°—Ç–µ–∫ –ø—É—Å—Ç? " + stack.isEmpty());
    }
}