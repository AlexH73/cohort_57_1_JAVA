package Lessons.Lesson_32.practice;

import java.util.Map;

/**
 * Интерфейс для реализации записной книжки (телефонного справочника).
 * Студенты должны реализовать этот интерфейс, используя `Map<String, String>`,
 * где ключ — имя контакта, а значение — телефонный номер.
 *
 * Операции, которые необходимо реализовать:
 * - Добавление нового контакта
 * - Получение номера по имени
 * - Обновление номера контакта
 * - Удаление контакта
 * - Проверка наличия контакта (по имени)
 * - Проверка наличия номера телефона
 * - Вывод всех контактов
 * - Очистка записной книжки
 * - Проверка, пустая ли записная книжка
 *
 * Пример тестовых данных:
 * - "Иван" -> "+7-900-123-45-67"
 * - "Мария" -> "+7-901-234-56-78"
 * - "Алексей" -> "+7-902-345-67-89"
 */
public interface PhoneBookInterface {

    /**
     * Добавляет новый контакт в записную книжку.
     * Если контакт с таким именем уже существует, метод не должен изменять его.
     *
     * @param name имя контакта
     * @param phoneNumber номер телефона
     * @return true, если контакт успешно добавлен, false, если контакт с таким именем уже существует
     */
    boolean addContact(String name, String phoneNumber);

    /**
     * Получает номер телефона по имени контакта.
     *
     * @param name имя контакта
     * @return номер телефона, если контакт найден, иначе null
     */
    String getPhoneNumber(String name);

    /**
     * Обновляет номер телефона для существующего контакта.
     * Если контакт не найден, метод ничего не делает.
     *
     * @param name имя контакта
     * @param newPhoneNumber новый номер телефона
     * @return true, если номер был обновлён, false, если контакт не найден
     */
    boolean updatePhoneNumber(String name, String newPhoneNumber);

    /**
     * Удаляет контакт из записной книжки.
     *
     * @param name имя контакта, который нужно удалить
     * @return true, если контакт был удалён, false, если контакт не найден
     */
    boolean removeContact(String name);

    /**
     * Проверяет, содержится ли в записной книжке контакт с указанным именем.
     *
     * @param name имя контакта
     * @return true, если контакт найден, иначе false
     */
    boolean containsContact(String name);

    /**
     * Проверяет, содержится ли в записной книжке указанный номер телефона.
     *
     * @param phoneNumber номер телефона
     * @return true, если номер найден, иначе false
     */
    boolean containsPhoneNumber(String phoneNumber);

    /**
     * Выводит список всех контактов и их номеров телефонов.
     *
     * @return `Map` со всеми контактами
     */
    Map<String, String> getAllContacts();

    /**
     * Очищает записную книжку, удаляя все контакты.
     */
    void clearPhoneBook();

    /**
     * Проверяет, является ли записная книжка пустой.
     *
     * @return true, если записная книжка не содержит контактов, иначе false
     */
    boolean isPhoneBookEmpty();
}
