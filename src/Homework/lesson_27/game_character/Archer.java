package Homework.lesson_27.game_character;

/**
 * –ö–ª–∞—Å—Å –ª—É—á–Ω–∏–∫–∞, —Ä–µ–∞–ª–∏–∑—É—é—â–∏–π –±–ª–∏–∂–Ω–∏–µ –∏ –¥–∞–ª—å–Ω–∏–µ –∞—Ç–∞–∫–∏.
 * –ù–∞—Å–ª–µ–¥—É–µ—Ç –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –æ—Ç BaseGameCharacter,
 * —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã Skill (–±–∞–∑–æ–≤—ã–µ –∞—Ç–∞–∫–∏) –∏ Ranged (–¥–∞–ª—å–Ω–∏–µ –∞—Ç–∞–∫–∏).
 *
 * –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
 * - –°–∏—Å—Ç–µ–º–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã—Ö –±–æ–µ–ø—Ä–∏–ø–∞—Å–æ–≤ (—Å—Ç—Ä–µ–ª—ã)
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∞—Ç–∞–∫–∏
 * - –†–∞–∑–Ω—ã–π —É—Ä–æ–Ω –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∞—Ç–∞–∫
 */
public class Archer extends BaseGameCharacter implements Skill, Ranged {
    private int arrows = 5; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç—Ä–µ–ª

    /**
     * –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–≥–æ –ª—É—á–Ω–∏–∫–∞
     * @param name –ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
     */
    public Archer(String name) {
        super(name);
        System.out.println("üèπ –õ—É—á–Ω–∏–∫ " + name + " –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ!");
    }

    /**
     * –û—Å–Ω–æ–≤–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ —Ä–∞—É–Ω–¥–µ. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ—Ç —Ç–∏–ø –∞—Ç–∞–∫–∏:
     * - –î–∞–ª—å–Ω—è—è –∞—Ç–∞–∫–∞ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Å—Ç—Ä–µ–ª
     * - –ë–ª–∏–∂–Ω—è—è –∞—Ç–∞–∫–∞ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å—Ç—Ä–µ–ª
     */
    @Override
    public void performAction() {
        System.out.println("\n‚ñ∂ " + name + " –≤—ã–±–∏—Ä–∞–µ—Ç —Ç–∏–ø –∞—Ç–∞–∫–∏...");

        if (target == null) {
            System.out.println("‚õî –ù–µ—Ç —Ü–µ–ª–∏!");
            return;
        }

        if (arrows > 0) {
            rangedAttack(target); // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –¥–∞–ª—å–Ω—è—è –∞—Ç–∞–∫–∞
        } else {
            attack(target); // –†–µ–∑–µ—Ä–≤–Ω–∞—è –±–ª–∏–∂–Ω—è—è –∞—Ç–∞–∫–∞
        }
    }

    /**
     * –ë–ª–∏–∂–Ω—è—è –∞—Ç–∞–∫–∞ –∫–∏–Ω–∂–∞–ª–æ–º
     * @param target –¶–µ–ª—å –¥–ª—è –∞—Ç–∞–∫–∏
     */
    @Override
    public void attack(GameCharacter target) {
        final int meleeDamage = 12;
        System.out.println("üî™ " + name + " –∞—Ç–∞–∫—É–µ—Ç " + target.getName() + " –∫–∏–Ω–∂–∞–ª–æ–º!");
        target.takeDamage(meleeDamage);
    }

    /**
     * –î–∞–ª—å–Ω—è—è –∞—Ç–∞–∫–∞ –∏–∑ –ª—É–∫–∞
     * @param target –¶–µ–ª—å –¥–ª—è –∞—Ç–∞–∫–∏
     */
    @Override
    public void rangedAttack(GameCharacter target) {
        final int rangedDamage = 18;
        if (arrows > 0) {
            System.out.println("üéØ " + name + " —Å—Ç—Ä–µ–ª—è–µ—Ç –≤ " + target.getName());
            target.takeDamage(rangedDamage);
            arrows--; // –†–∞—Å—Ö–æ–¥ –æ–¥–Ω–æ–π —Å—Ç—Ä–µ–ª—ã

            System.out.println("‚ûπ –û—Å—Ç–∞–ª–æ—Å—å —Å—Ç—Ä–µ–ª: " + arrows);
        }
    }

    /**
     * –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø–∞—Å–∞ —Å—Ç—Ä–µ–ª
     * @param quantity –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–±–∞–≤–ª—è–µ–º—ã—Ö —Å—Ç—Ä–µ–ª
     */
    public void addArrows(int quantity) {
        arrows += quantity;
        System.out.println("üîº " + name + " –ø–æ–ª—É—á–∏–ª " + quantity + " —Å—Ç—Ä–µ–ª");
    }
}