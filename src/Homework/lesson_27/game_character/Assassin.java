package Homework.lesson_27.game_character;

/**
 * –ö–ª–∞—Å—Å –∞—Å—Å–∞—Å–∏–Ω–∞ —Å –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º–∏
 */
public class Assassin extends BaseGameCharacter implements Skill, Stealthy, Ranged {
    private boolean isStealthMode = true;

    public Assassin(String name) {
        super(name);
        System.out.println("üó°Ô∏è –ê—Å—Å–∞—Å–∏–Ω " + name + " –≤—ã—à–µ–ª –Ω–∞ –æ—Ö–æ—Ç—É!");
    }

    @Override
    public void performAction() {
        if (isStealthMode) {
            stealthyAttack(null);
        } else {
            rangedAttack(null);
        }
        isStealthMode = !isStealthMode;
    }

    @Override
    public void stealthyAttack(GameCharacter target) {
        System.out.println("üë§Ô∏è " + name + " –Ω–∞–Ω–æ—Å–∏—Ç —Å–º–µ—Ä—Ç–æ–Ω–æ—Å–Ω—ã–π —É–¥–∞—Ä –∏–∑ —Ç–µ–Ω–∏!");
        if (target != null) {
            target.takeDamage(40);
        }
    }

    @Override
    public void rangedAttack(GameCharacter target) {
        System.out.println("üéØ " + name + " –±—Ä–æ—Å–∞–µ—Ç –æ—Ç—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–ª–∏–Ω–æ–∫!");
        if (target != null) {
            target.takeDamage(25);
        }
    }

    @Override
    public void attack(GameCharacter target) {
        if (Math.random() < 0.7) {
            stealthyAttack(target);
        } else {
            rangedAttack(target);
        }
    }
}
