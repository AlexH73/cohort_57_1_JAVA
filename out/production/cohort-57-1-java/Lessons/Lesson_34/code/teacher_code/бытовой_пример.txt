количество_яиц = 234;

приготовить_омлет() {
    // для приготовления нам надо 3 яйца

    try {
        пытаемся приготовить омлет;
        // тратим 3 яйца:
        количество_яиц = количество_яиц - 3;
        cook();
    } catch (НедостаточноеКоличествоЯицException exception) {
        // обработка ошибки
        // логика работы ресторана не нарушена
    } finally {
        производим уборку.
    }

    // дальнейшая работа ресторана, которая не зависит от яиц на кухне
}


приготовить_омлет() throws НедостаточноеКоличествоЯицException {
    // для приготовления нам надо 3 яйца

    пытаемся приготовить омлет;
    // тратим 3 яйца:
    количество_яиц = количество_яиц - 3;
    cook();
}

private void cook() {
    if (количество_яиц < 3) {
        throw new НедостаточноеКоличествоЯицException();
    }

    готовим_омлет...
}


class НедостаточноеКоличествоЯицException extends Exception {
     public НедостаточноеКоличествоЯицException() {
        super("Недостаточно яиц на кухне!")
     }
}

class ПрорывКанализацииException  extends Exception {
     public НедостаточноеКоличествоЯицException(String message) {
        super(message)
     }
}

class ЗакончиласьУникальнаяСпецияException extends Exception {
     public ЗакончиласьУникальнаяСпецияException(String message) {
        super(message)
     }
}